@using CrystalSoftware.ERP.Api.Views.Shared.Components.DropzoneJS;
@using CrystalSoftware.ERP.Api.Shared.Components.DropzoneJS
@{
    Layout = "Layout/_Layout";
}

@*TODO: Esses estilos devem ficar dentro do Default.cshtml do componente. Descobrir porque não estão sendo carregados lá*@
@section Styles{
    <link rel="stylesheet" href="~/plugins/dropzone/min/dropzone.min.css">
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12 mt-2">
                @{
                    var dropzoneJSViewModel = new DropzoneJSViewModel
                    {
                        CardTitle = "Importar arquivos",
                        CardDescriptionHtml = "clique em <em>adicionar arquivos</em> ou <em>arraste e solte</em> arquivos xml para iniciar a importação",
                        AddFileButton = "Adicionar arquivos",
                        StartUploadButton = "Iniciar importação",
                        CancelUploadButton = "Cancelar importação",
                        UploadFileButton = "Importar",
                        CancelUploadFileButton = "Cancelar",
                        RemoveUploadFileButton = "Remover",
                        ShowFooter = true,
                        FooterHtml = "Visit <a href='https://www.dropzonejs.com'>dropzone.js documentation</a> for more examples and information about the plugin."
                    };
                }

                @(await Component.InvokeAsync<DropzoneJSViewComponent>(dropzoneJSViewModel))

            </div>
        </div>
    </div>
</section>

@*TODO: Esses scripts devem ficar dentro do Default.cshtml do componente. Descobrir porque não estão sendo carregados lá*@
@section Scripts {
    <script src="~/plugins/dropzone/min/dropzone.min.js"></script>
    <script>
        $(document).ready(function () {
            $(function () {
                // DropzoneJS code Start
                Dropzone.autoDiscover = false

                // Get the template HTML and remove it from the doumenthe template HTML and remove it from the doument
                var previewNode = document.querySelector("#template")
                previewNode.id = ""
                var previewTemplate = previewNode.parentNode.innerHTML
                previewNode.parentNode.removeChild(previewNode)

                var myDropzone = new Dropzone(document.body, { // Make the whole body a dropzone
                    url: "/target-url", // Set the url
                    thumbnailWidth: 80,
                    thumbnailHeight: 80,
                    parallelUploads: 20,
                    previewTemplate: previewTemplate,
                    autoQueue: false, // Make sure the files aren't queued until manually added
                    previewsContainer: "#previews", // Define the container to display the previews
                    clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
                })

                myDropzone.on("addedfile", function (file) {
                    // Hookup the start button
                    file.previewElement.querySelector(".start").onclick = function () { myDropzone.enqueueFile(file) }
                })

                // Update the total progress bar
                myDropzone.on("totaluploadprogress", function (progress) {
                    document.querySelector("#total-progress .progress-bar").style.width = progress + "%"
                })

                myDropzone.on("sending", function (file) {
                    // Show the total progress bar when upload starts
                    document.querySelector("#total-progress").style.opacity = "1"
                    // And disable the start button
                    file.previewElement.querySelector(".start").setAttribute("disabled", "disabled")
                })

                // Hide the total progress bar when nothing's uploading anymore
                myDropzone.on("queuecomplete", function (progress) {
                    document.querySelector("#total-progress").style.opacity = "0"
                })

                // Setup the buttons for all transfers
                // The "add files" button doesn't need to be setup because the config
                // `clickable` has already been specified.
                document.querySelector("#actions .start").onclick = function () {
                    myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED))
                }
                document.querySelector("#actions .cancel").onclick = function () {
                    myDropzone.removeAllFiles(true)
                }
                // DropzoneJS code End
            });
        });
    </script>
}